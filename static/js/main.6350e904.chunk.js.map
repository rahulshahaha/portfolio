{"version":3,"sources":["Card.js","Deck.js","Nav.js","App.js","serviceWorker.js","index.js"],"names":["Card","console","log","ticker","this","props","percentUp","price","priceBought","toFixed","dollarsUp","quantity","perfromanceClass","className","onDoubleClick","doubleClickFunction","bind","name","changeType","percentChange","React","Component","Deck","generateCards","func","currentHoldings","height","width","map","s","key","Nav","id","onClick","logOut","data-target","onSubmit","signUpSubmit","type","required","htmlFor","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","db","document","addEventListener","modals","querySelectorAll","M","Modal","init","items","Collapsible","App","calculateMetrics","totalInvested","totalValue","totalGain","percentGain","holdings","state","forEach","holding","setState","signUp","e","preventDefault","signupForm","querySelector","email","value","password","getElementById","reset","modal","getInstance","close","createUserWithEmailAndPassword","then","cred","collection","doc","user","uid","set","logIn","form","FormData","get","signInWithEmailAndPassword","innerHTML","catch","err","message","addHolding","add","owner","currentUser","pullStockData","userHoldings","tickers","docs","data","Http","XMLHttpRequest","url","open","send","onload","stockData","JSON","parse","responseText","rawData","fullStockData","apiStockData","quote","symbol","toLowerCase","latestPrice","previousClose","Math","round","push","companyName","displayWindowSize","w","documentElement","clientWidth","h","clientHeight","signOut","window","onAuthStateChanged","userRef","where","onSnapshot","clearInterval","interval","autoComplete","placeholder","step","handleDoubleCLick","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"qQAkCkBA,E,kLA7BVC,QAAQC,IAAI,iB,+BAKZ,IAAIC,EAASC,KAAKC,MAAMF,OACpBG,GAAaF,KAAKC,MAAME,MAAQH,KAAKC,MAAMG,aAAeJ,KAAKC,MAAMG,YAEzEF,GADAA,GAAwB,KACFG,QAAQ,GAC9B,IAAIC,EAAaN,KAAKC,MAAME,MAAQH,KAAKC,MAAMM,SAAaP,KAAKC,MAAMG,YAAcJ,KAAKC,MAAMM,SAE5FC,EAAmB,uBAIvB,OALAF,EAAYA,EAAUD,QAAQ,IAEf,IACZG,EAAmB,0BAGnB,yBAAKC,UAAU,OAAOC,cAAeV,KAAKC,MAAMU,oBAAoBC,KAAKZ,KAAK,CAACD,YAC3E,wBAAIU,UAAU,eAAeT,KAAKC,MAAMY,MACxC,wBAAIJ,UAAU,gBAAd,IAA+BT,KAAKC,MAAME,OAC1C,wBAAIM,UAAWT,KAAKC,MAAMa,YAA1B,SAA+Cd,KAAKC,MAAMc,cAA1D,MACA,wBAAIN,UAAU,WAAd,gBACA,wBAAIA,UAAWD,GAAf,IAAmCF,EAAnC,QAAqDJ,EAArD,W,GAxBIc,IAAMC,WCkCVC,E,4MA7BXC,cAAgB,WACZ,IAAIC,EAAO,EAAKnB,MAAMU,oBAEtB,GAAsB,MADA,EAAKV,MAAMoB,gBAE7B,OAAO,KAEX,IAAIC,EAAS,EAAKrB,MAAMqB,OACpBC,EAAQ,EAAKtB,MAAMsB,MAKtB,OAJe,EAAKtB,MAAMoB,gBAAgBG,KAAI,SAASC,GACpD,OAAO,kBAAC,EAAD,CAAMd,oBAAqBS,EAAMM,IAAKD,EAAEC,IAAK3B,OAAQ0B,EAAEC,IAAKb,KAAMY,EAAEZ,KAAMV,MAAOsB,EAAEtB,MAAOY,cAAeU,EAAEV,cAAeD,WAAYW,EAAEX,WAAYQ,OAAQA,EAAQC,MAAOA,EAAOhB,SAAUkB,EAAElB,SAAUH,YAAaqB,EAAErB,kB,uDAUtO,OACI,yBAAKK,UAAU,QACVT,KAAKmB,qB,GAxBCH,IAAMC,WCmDPU,E,uKA/CV,OACI,yBAAKlB,UAAU,OACX,yBAAKA,UAAU,2BACX,yBAAKA,UAAU,eACX,wBAAImB,GAAG,aAAanB,UAAU,QAI1B,wBAAIA,UAAU,aACV,4BAAQA,UAAU,+BAA+BmB,GAAG,SAASC,QAAS7B,KAAKC,MAAM6B,QAAjF,WAKJ,wBAAIrB,UAAU,cACV,4BAAQA,UAAU,6CAA6CsB,cAAY,gBAA3E,eAKhB,yBAAKH,GAAG,eAAenB,UAAU,uBAC7B,yBAAKA,UAAU,iBACf,wBAAIA,UAAU,cAAd,WACA,0BAAMmB,GAAG,cAAcI,SAAUhC,KAAKC,MAAMgC,cACxC,yBAAKxB,UAAU,eACf,2BAAOyB,KAAK,QAAQN,GAAG,eAAeO,UAAQ,EAAC1B,UAAU,eACzD,2BAAO2B,QAAQ,gBAAf,kBAEA,yBAAK3B,UAAU,eACf,2BAAOA,UAAU,aAAayB,KAAK,WAAWN,GAAG,kBAAkBO,UAAQ,IAC3E,2BAAOC,QAAQ,mBAAf,oBAEA,yBAAK3B,UAAU,eACX,2BAAOA,UAAU,aAAayB,KAAK,OAAON,GAAG,cAAcO,UAAQ,IACnE,2BAAOC,QAAQ,eAAf,SAEJ,4BAAQ3B,UAAU,gCAAlB,WACA,uBAAGA,UAAU,yC,GA3CnBO,IAAMC,W,gBCkBxBoB,gBAXuB,CACrBC,OAAQ,0CACRC,WAAY,kCACZC,YAAa,yCACbC,UAAW,kBACXC,cAAe,8BACfC,kBAAmB,eACnBC,MAAO,8CAKT,IAAMC,EAAOR,SACPS,EAAKT,cAIXU,SAASC,iBAAiB,oBAAoB,WAE5C,IAAIC,EAASF,SAASG,iBAAiB,UACvCC,IAAEC,MAAMC,KAAKJ,GAEb,IAAIK,EAAQP,SAASG,iBAAiB,gBACtCC,IAAEI,YAAYF,KAAKC,M,IAsPNE,E,kDA9Ob,WAAYvD,GAAQ,IAAD,8BACjB,cAAMA,IAQRwD,iBAAmB,WACjB,IAAIC,EAAgB,EAChBC,EAAa,EACbC,EAAY,EACZC,EAAc,EACdC,EAAW,EAAKC,MAAM1C,gBACX,MAAZyC,GACDA,EAASE,SAAQ,SAAAC,GACfP,GAAkBO,EAAQ7D,YAAc6D,EAAQ1D,SAChDoD,GAAeM,EAAQ9D,MAAQ8D,EAAQ1D,YAK3CsD,GADAD,EAAYD,EAAaD,GACCA,EAC1BG,GAAe,IAEf,EAAKK,SAAS,CACZR,cAAeA,EAAcrD,QAAQ,GACrCsD,WAAYA,EAAWtD,QAAQ,GAC/BuD,UAAWA,EAAUvD,QAAQ,GAC7BwD,YAAaA,EAAYxD,QAAQ,MA9BlB,EAoCnB8D,OAAS,SAACC,GACRA,EAAEC,iBACF,IAAMC,EAAavB,SAASwB,cAAc,gBACpCC,EAAQF,EAAW,gBAAgBG,MACnCC,EAAWJ,EAAW,mBAAmBG,MACzC5D,EAAOyD,EAAW,eAAeG,MACvC1B,SAAS4B,eAAe,eAAeC,QACvC/E,QAAQC,IAAI0E,EAAOE,EAAU7D,GAE7B,IAAMgE,EAAQ9B,SAASwB,cAAc,iBACrCpB,IAAEC,MAAM0B,YAAYD,GAAOE,QAC3BT,EAAWM,QAEX/B,EAAKmC,+BAA+BR,EAAME,GAAUO,MAAK,SAAAC,GACvDpC,EAAGqC,WAAW,SAASC,IAAIF,EAAKG,KAAKC,KAAKC,IAAI,CAC1Cf,MAAOA,EACP3D,KAAMA,QApDK,EAyDnB2E,MAAQ,SAACpB,GACPA,EAAEC,iBACF,IAAIoB,EAAO,IAAIC,SAAS3C,SAAS4B,eAAe,cAC5CH,EAAQiB,EAAKE,IAAI,SACjBjB,EAAWe,EAAKE,IAAI,YAExB9C,EAAK+C,2BAA2BpB,EAAME,GAAUO,MAAK,SAAAC,GACnDnC,SAAS4B,eAAe,aAAaC,QACrC7B,SAAS4B,eAAe,cAAckB,UAAY,MACnDC,OAAM,SAAAC,GACPhD,SAAS4B,eAAe,cAAckB,UAAYE,EAAIC,YAnErC,EA2EnBC,WAAa,SAAC7B,GACZA,EAAEC,iBACF,IAAIoB,EAAO,IAAIC,SAAS3C,SAAS4B,eAAe,eAC5C5E,EAAS0F,EAAKE,IAAI,UAClBxF,EAAQsF,EAAKE,IAAI,SACjBpF,EAAWkF,EAAKE,IAAI,YAExB7C,EAAGqC,WAAW,YAAYe,IAAI,CAC5BnG,OAAQA,EACRI,MAAOA,EACPI,SAAUA,EACV4F,MAAOrD,EAAGsC,IAAI,SAAU/C,SAAgB+D,YAAYd,OACrDL,MAAK,WACNlC,SAAS4B,eAAe,cAAcC,YAxFrB,EA8FnByB,cAAgB,WACd,IAAIC,EAAe,EAAKvC,MAAMuC,aAE1BC,EAAU,GACZ,GAA2B,MAAxBD,EAAaE,KAAK,GAAW,CAC9BF,EAAaE,KAAKxC,SAAQ,SAAAC,GACtBsC,GAAWtC,EAAQwC,OAAO1G,OAC1BwG,GAAW,OAEf,IAAMG,EAAO,IAAIC,eACXC,EAAI,+DAA+DL,EAAQ,kEACjFG,EAAKG,KAAK,MAAOD,GACjBF,EAAKI,OACLJ,EAAKK,OAAS,SAAC3C,GACb,IAAI4C,EAAYC,KAAKC,MAAMR,EAAKS,cAChC,EAAKjD,SAAS,CACZkD,QAASJ,IAGX,IAAIK,EAAgB,GACpBf,EAAaE,KAAKxC,SAAQ,SAAAC,GACxB,IAAIqD,EACJ,IAAI,IAAI5F,KAAOsF,EACVA,EAAUtF,GAAK6F,MAAMC,OAAOC,gBAAkBxD,EAAQwC,OAAO1G,OAAO0H,gBACrEH,EAAeN,EAAUtF,GAAK6F,OAGlC,IAAIxG,GAAiBuG,EAAaI,YAAcJ,EAAaK,eAAiBL,EAAaK,cAEvF7G,GADJC,EAAgB6G,KAAKC,MAAsB,IAAhB9G,EAAsB,KAAO,MACtB,EAAI,kBAAoB,oBAC1DsG,EAAcS,KAAK,CACjBpG,IAAKuC,EAAQwC,OAAO1G,OACpBc,KAAMyG,EAAaS,YACnBhH,cAAeA,EACfD,WAAYA,EACZP,SAAU0D,EAAQwC,OAAOlG,SACzBH,YAAa6D,EAAQwC,OAAOtG,MAC5BA,MAAOmH,EAAaI,iBAGxB,EAAKxD,SAAS,CACZ7C,gBAAiBgG,IAEnB,EAAK5D,yBAIP5D,QAAQC,IAAI,+BA7IC,EAiJrBkI,kBAAoB,WAEhB,IAAIC,EAAIlF,SAASmF,gBAAgBC,YAC7BC,EAAIrF,SAASmF,gBAAgBG,aACjC,EAAKnE,SAAS,CACZ3C,MAAO0G,EACP3G,OAAQ8G,KArJV,EAAKrE,MAAQ,CACXS,MAAO,QACPjD,MAAOwB,SAASmF,gBAAgBC,YAChC7G,OAAQyB,SAASmF,gBAAgBG,cALlB,E,qDAwEjBxF,EAAKyF,Y,0CAqFc,IAAD,OAKlBC,OAAOvF,iBAAiB,SAAUhD,KAAKgI,mBAIvCnF,EAAK2F,oBAAmB,SAAAnD,GACnBA,EACDvC,EAAGqC,WAAW,SAASC,IAAIC,EAAKC,KAAKK,MAAMV,MAAK,SAAAG,GAC9C,EAAKlB,SAAS,CACZM,MAAOY,EAAIqB,OAAOjC,MAClBa,KAAMD,IAER,IAAIqD,EAAU3F,EAAGqC,WAAW,SAASC,IAAI,EAAKrB,MAAMsB,KAAKzD,IACzDkB,EAAGqC,WAAW,YAAYuD,MAAM,QAAS,KAAMD,GAASE,YAAW,SAAArC,GACjE,EAAKpC,SAAS,CACZoC,aAAcA,IAEhB,EAAKD,sBAIT,EAAKnC,SAAS,CACZM,MAAO,gBACPnD,gBAAiB,KACjBqC,cAAe,EACfC,WAAY,EACZC,UAAW,EACXC,YAAa,S,6CASnB+E,cAAc5I,KAAK6I,Y,wCAGH9I,M,+BAKhB,OACE,yBAAKU,UAAU,OACb,kBAAC,EAAD,CAAKwB,aAAcjC,KAAKmE,OAAQrC,OAAQ9B,KAAK8B,SAC7C,0BAAMgH,aAAa,MAAMlH,GAAG,YAAYI,SAAUhC,KAAKwF,OACrD,uCACA,2BAAOtD,KAAK,OAAOrB,KAAK,QAAQkI,YAAY,UAC5C,2BAAO7G,KAAK,WAAWrB,KAAK,WAAWkI,YAAY,aACnD,uBAAGnH,GAAG,eACN,2CAEF,yBAAKA,GAAG,UACN,uCACA,4BAAQC,QAAS7B,KAAK8B,QAAtB,YAEF,4CAAkB9B,KAAK+D,MAAMS,OAC7B,4BAAQ3C,QAAS7B,KAAKqG,eAAtB,eACA,0BAAMyC,aAAa,MAAMlH,GAAG,aAAaI,SAAUhC,KAAKiG,YACtD,4CACA,2BAAO/D,KAAK,OAAOrB,KAAK,SAASkI,YAAY,WAC7C,2BAAO7G,KAAK,SAASrB,KAAK,QAAQkI,YAAY,QAAQC,KAAK,cAC3D,2BAAO9G,KAAK,SAASrB,KAAK,WAAWkI,YAAY,WAAWC,KAAK,cACjE,gDAEF,6BACA,6CAAmBhJ,KAAK+D,MAAMJ,WAA9B,iBAAwD3D,KAAK+D,MAAMH,UAAnE,IAA+E5D,KAAK+D,MAAMF,YAA1F,MAEA,kBAAC,EAAD,CAAMlD,oBAAqBX,KAAKiJ,kBAAmB5H,gBAAiBrB,KAAK+D,MAAM1C,gBAAiBC,OAAQtB,KAAK+D,MAAMzC,OAAQC,MAAOvB,KAAK+D,MAAMxC,a,GAxOnIP,IAAMC,WC3BJiI,QACW,cAA7BX,OAAOY,SAASC,UAEe,UAA7Bb,OAAOY,SAASC,UAEhBb,OAAOY,SAASC,SAASC,MACvB,2DCTNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFzG,SAAS4B,eAAe,SDsHpB,kBAAmB8E,WACrBA,UAAUC,cAAcC,MACrB1E,MAAK,SAAA2E,GACJA,EAAaC,gBAEd/D,OAAM,SAAAgE,GACLjK,QAAQiK,MAAMA,EAAM9D,c","file":"static/js/main.6350e904.chunk.js","sourcesContent":["import React from 'react';\n\nclass Card extends React.Component {\n\n    handleDoubleCLick(){\n        console.log(\"doubleClick\");\n    }\n\n \n    render(){\n        var ticker = this.props.ticker;\n        var percentUp = (this.props.price - this.props.priceBought) / this.props.priceBought;\n        percentUp = percentUp * 100;\n        percentUp = percentUp.toFixed(2);\n        var dollarsUp = (this.props.price * this.props.quantity) - (this.props.priceBought * this.props.quantity);\n        dollarsUp = dollarsUp.toFixed(2);\n        var perfromanceClass = \"overallPerformanceUp\";\n        if(dollarsUp < 0){\n           perfromanceClass = \"overallPerformanceDown\";\n        }\n        return(\n           <div className=\"card\" onDoubleClick={this.props.doubleClickFunction.bind(this,{ticker})}>\n               <h1 className=\"companyName\">{this.props.name}</h1>\n               <h6 className=\"currentPrice\">${this.props.price}</h6>\n               <h6 className={this.props.changeType}>&nbsp; ({this.props.percentChange}%)</h6>\n               <h6 className=\"overall\">Overall:&nbsp;</h6>\n               <h6 className={perfromanceClass}>${dollarsUp}&nbsp;({percentUp}%)</h6>\n               {/* <Chart chartData = {this.props.chartData} width={this.props.width} height={this.props.height} /> */}\n           </div>\n        )\n    }\n   }\n\n\n   export default Card;\n","import React from 'react';\nimport Card from './Card';\n\n\nclass Deck extends React.Component {\n\n    \n    generateCards = () =>{\n        var func = this.props.doubleClickFunction;\n        var currentHoldings = this.props.currentHoldings;\n        if(currentHoldings == null){\n            return null;\n        }\n        var height = this.props.height;\n        var width = this.props.width;\n        var cardsList = this.props.currentHoldings.map(function(s){\n            return <Card doubleClickFunction={func} key={s.key} ticker={s.key} name={s.name} price={s.price} percentChange={s.percentChange} changeType={s.changeType} height={height} width={width} quantity={s.quantity} priceBought={s.priceBought} />;\n        });\n\n         return cardsList;\n    }\n\n\n\n\n    render(){\n    return (\n        <div className=\"deck\">\n            {this.generateCards()}\n        </div>\n    )\n    }\n\n}\n\n\nexport default Deck;","import React from 'react';\n\nclass Nav extends React.Component {\n\n\n\n \n    render(){\n        return(\n            <div className=\"nav\">\n                <nav className=\"z-depth-0 grey darken-3\">\n                    <div className=\"nav-wrapper\">\n                        <ul id=\"nav-mobile\" className=\"left\">\n                            {/* <li className=\"logged-in\">\n                                <button className=\"btn black darken-2 z-depth-0 modal-trigger\" data-target=\"modal-account\">Account</button>\n                            </li> */}\n                            <li className=\"logged-in\">\n                                <button className=\"btn black darken-2 z-depth-0\" id=\"logout\" onClick={this.props.logOut}>Logout</button>\n                            </li>\n                            {/* <li className=\"logged-out\">\n                                <button className=\"btn black darken-2 z-depth-0 modal-trigger\" data-target=\"modal-login\">Login</button>\n                            </li> */}\n                            <li className=\"logged-out\">\n                                <button className=\"btn black darken-2 z-depth-0 modal-trigger\" data-target=\"modal-signup\">Sign up</button>\n                            </li>\n                        </ul>\n                    </div>\n                </nav>\n                <div id=\"modal-signup\" className=\"modal grey darken-3\">\n                    <div className=\"modal-content\">\n                    <h4 className=\"white-text\">Sign up</h4>\n                    <form id=\"signup-form\" onSubmit={this.props.signUpSubmit}>\n                        <div className=\"input-field\">\n                        <input type=\"email\" id=\"signup-email\" required className=\"white-text\" />\n                        <label htmlFor=\"signup-email\">Email address</label>\n                        </div>\n                        <div className=\"input-field\">\n                        <input className=\"white-text\" type=\"password\" id=\"signup-password\" required />\n                        <label htmlFor=\"signup-password\">Choose password</label>\n                        </div>\n                        <div className='input-field'>\n                            <input className=\"white-text\" type=\"text\" id=\"signup-name\" required />\n                            <label htmlFor=\"signup-name\">Name</label>\n                        </div>\n                        <button className=\"btn black darken-2 z-depth-0\">Sign up</button>\n                        <p className=\"error pink-text center-align\"></p>\n                    </form>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n   }\n\n\n   export default Nav;\n","import React from 'react';\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport * as firebase from \"firebase/app\";\nimport Deck from './Deck';\nimport Nav from './Nav';\nimport M from 'materialize-css';\n\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAPYU3kgXezIktVO4gK8orxOqGiA_4Ridc\",\n  authDomain: \"portfolio-fb445.firebaseapp.com\",\n  databaseURL: \"https://portfolio-fb445.firebaseio.com\",\n  projectId: \"portfolio-fb445\",\n  storageBucket: \"portfolio-fb445.appspot.com\",\n  messagingSenderId: \"614891043124\",\n  appId: \"1:614891043124:web:2acd2f4bc851ec6cebcd61\"\n};\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\nconst auth = firebase.auth();\nconst db = firebase.firestore();\n\n\n// setup materialize components\ndocument.addEventListener('DOMContentLoaded', function() {\n\n  var modals = document.querySelectorAll('.modal');\n  M.Modal.init(modals);\n\n  var items = document.querySelectorAll('.collapsible');\n  M.Collapsible.init(items);\n\n});\n\n\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"rahul\",\n      width: document.documentElement.clientWidth,\n      height: document.documentElement.clientHeight\n    };\n  }\n\n  calculateMetrics = () =>{\n    var totalInvested = 0;\n    var totalValue = 0;\n    var totalGain = 0;\n    var percentGain = 0;\n    var holdings = this.state.currentHoldings;\n    if(holdings != null){\n      holdings.forEach(holding => {\n        totalInvested += (holding.priceBought * holding.quantity);\n        totalValue += (holding.price * holding.quantity);\n      });\n    }\n\n    totalGain = totalValue - totalInvested;\n    percentGain = totalGain / totalInvested;\n    percentGain *= 100;\n\n    this.setState({\n      totalInvested: totalInvested.toFixed(2),\n      totalValue: totalValue.toFixed(2),\n      totalGain: totalGain.toFixed(2),\n      percentGain: percentGain.toFixed(2)\n    });\n\n  }\n\n\n  signUp = (e) => {\n    e.preventDefault();\n    const signupForm = document.querySelector('#signup-form');\n    const email = signupForm['signup-email'].value;\n    const password = signupForm['signup-password'].value;\n    const name = signupForm['signup-name'].value;\n    document.getElementById(\"signup-form\").reset();\n    console.log(email, password, name);\n\n    const modal = document.querySelector('#modal-signup');\n    M.Modal.getInstance(modal).close();\n    signupForm.reset();\n\n    auth.createUserWithEmailAndPassword(email,password).then(cred => {\n      db.collection('users').doc(cred.user.uid).set({\n          email: email,\n          name: name\n      });\n    });\n  }\n\n  logIn = (e) => {\n    e.preventDefault();\n    var form = new FormData(document.getElementById(\"logInForm\"));\n    var email = form.get(\"email\");\n    var password = form.get(\"password\");\n\n    auth.signInWithEmailAndPassword(email,password).then(cred => {\n      document.getElementById(\"logInForm\").reset();\n      document.getElementById(\"logInError\").innerHTML = \"\";\n  }).catch(err => {\n    document.getElementById(\"logInError\").innerHTML = err.message;\n  });\n  }\n\n  logOut(){\n    auth.signOut();\n  }\n\n  addHolding = (e) => {\n    e.preventDefault();\n    var form = new FormData(document.getElementById(\"addHolding\"));\n    var ticker = form.get(\"ticker\");\n    var price = form.get(\"price\");\n    var quantity = form.get(\"quantity\");\n\n    db.collection(\"holdings\").add({\n      ticker: ticker,\n      price: price,\n      quantity: quantity,\n      owner: db.doc('users/'+ firebase.auth().currentUser.uid)\n  }).then(() =>{\n    document.getElementById(\"addHolding\").reset();\n  });\n\n  }\n\n\n  pullStockData = () => {\n    var userHoldings = this.state.userHoldings;\n    //get ticker list\n    var tickers = '';\n      if(userHoldings.docs[0] != null){\n        userHoldings.docs.forEach(holding => {\n            tickers += holding.data().ticker;\n            tickers += ',';\n        });\n        const Http = new XMLHttpRequest();\n        const url='https://cloud.iexapis.com/stable/stock/market/batch?symbols='+tickers+'&types=quote&range=1d&token=pk_ea3fad39b66c4c08a98acce72eda2aaa';\n        Http.open(\"GET\", url);\n        Http.send();\n        Http.onload = (e) => {\n          var stockData = JSON.parse(Http.responseText);\n          this.setState({\n            rawData: stockData\n          })\n          //build state data\n          var fullStockData = [];\n          userHoldings.docs.forEach(holding => {\n            var apiStockData;\n            for(var key in stockData){\n              if(stockData[key].quote.symbol.toLowerCase() === holding.data().ticker.toLowerCase()){\n                apiStockData = stockData[key].quote;\n              }\n            }\n            var percentChange = (apiStockData.latestPrice - apiStockData.previousClose) / apiStockData.previousClose;\n            percentChange = Math.round(percentChange * 100 * 100) / 100;\n            var changeType = percentChange >= 0 ? \"percentChangeUp\" : \"percentChangeDown\";\n            fullStockData.push({\n              key: holding.data().ticker,\n              name: apiStockData.companyName,\n              percentChange: percentChange,\n              changeType: changeType,\n              quantity: holding.data().quantity,\n              priceBought: holding.data().price,\n              price: apiStockData.latestPrice\n            })\n          })\n          this.setState({\n            currentHoldings: fullStockData\n          });\n          this.calculateMetrics();\n        }\n\n      }else{\n        console.log(\"user does not own anything\");\n      }\n  }\n\ndisplayWindowSize = () => {\n    // Get width and height of the window excluding scrollbars\n    var w = document.documentElement.clientWidth;\n    var h = document.documentElement.clientHeight;\n    this.setState({\n      width: w,\n      height: h\n    })\n}\n \n// Attaching the event listener function to window's resize event\n\n  componentDidMount() {\n    //set update interval\n    // this.interval = setInterval(() => this.pullStockData(), 1000);\n\n    //window size changes\n    window.addEventListener(\"resize\", this.displayWindowSize);\n\n\n    //auth changes\n    auth.onAuthStateChanged(user => {\n      if(user){\n        db.collection('users').doc(user.uid).get().then(doc => {\n          this.setState({\n            email: doc.data().email,\n            user: doc\n          });\n          var userRef = db.collection('users').doc(this.state.user.id);\n          db.collection('holdings').where(\"owner\", \"==\", userRef).onSnapshot(userHoldings => {\n            this.setState({\n              userHoldings: userHoldings\n            })\n            this.pullStockData();\n          });\n        });\n      }else{\n        this.setState({\n          email: 'Not Logged In',\n          currentHoldings: null,\n          totalInvested: 0,\n          totalValue: 0,\n          totalGain: 0,\n          percentGain: 0\n        });\n      }\n    });\n\n \n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  handleDoubleCLick(ticker){\n    //show update modal\n  }\n\n  render(){\n    return (\n      <div className=\"App\">\n        <Nav signUpSubmit={this.signUp} logOut={this.logOut}></Nav>\n        <form autoComplete=\"off\" id=\"logInForm\" onSubmit={this.logIn}>\n          <p>Log in: </p>\n          <input type=\"text\" name=\"email\" placeholder=\"email\"></input>\n          <input type=\"password\" name=\"password\" placeholder=\"password\"></input>\n          <p id=\"logInError\"></p>\n          <button>Log in</button>\n        </form>\n        <div id=\"logOut\">\n          <p>Log Out:</p>\n          <button onClick={this.logOut}>Log out</button>\n        </div>\n        <p>Logged in as: {this.state.email}</p>\n        <button onClick={this.pullStockData}>Update Data</button>\n        <form autoComplete=\"off\" id=\"addHolding\" onSubmit={this.addHolding}>\n          <p>Add Holding: </p>\n          <input type=\"text\" name=\"ticker\" placeholder=\"ticker\"></input>\n          <input type=\"number\" name=\"price\" placeholder=\"price\" step=\"0.0000001\"></input>\n          <input type=\"number\" name=\"quantity\" placeholder=\"quantity\" step=\"0.0000001\"></input>\n          <button>Add holding</button>\n        </form>\n        <hr></hr>\n        <h3>Total Value: ${this.state.totalValue} Total Gain: ${this.state.totalGain}({this.state.percentGain}%)</h3>\n        {/* <Card key=\"W\" name=\"Wayfair\" price={100} percentChange={10} changeType=\"percentChangeUp\" height={window.innerHeight} width={window.innerWidth} quantity={10} priceBought={25} /> */}\n        <Deck doubleClickFunction={this.handleDoubleCLick} currentHoldings={this.state.currentHoldings} height={this.state.height} width={this.state.width}></Deck>\n      </div>\n    );\n\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}